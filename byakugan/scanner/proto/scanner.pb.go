// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.0
// source: scanner.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Core message types
type ScanTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Target        *Target                `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	AuthContext   *AuthContext           `protobuf:"bytes,3,opt,name=auth_context,json=authContext,proto3" json:"auth_context,omitempty"`
	Payload       *Payload               `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	Validation    *Validation            `protobuf:"bytes,5,opt,name=validation,proto3" json:"validation,omitempty"`
	RuleContext   *RuleContext           `protobuf:"bytes,6,opt,name=rule_context,json=ruleContext,proto3" json:"rule_context,omitempty"`
	Config        *TaskConfig            `protobuf:"bytes,7,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanTask) Reset() {
	*x = ScanTask{}
	mi := &file_scanner_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanTask) ProtoMessage() {}

func (x *ScanTask) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanTask.ProtoReflect.Descriptor instead.
func (*ScanTask) Descriptor() ([]byte, []int) {
	return file_scanner_proto_rawDescGZIP(), []int{0}
}

func (x *ScanTask) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ScanTask) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *ScanTask) GetAuthContext() *AuthContext {
	if x != nil {
		return x.AuthContext
	}
	return nil
}

func (x *ScanTask) GetPayload() *Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ScanTask) GetValidation() *Validation {
	if x != nil {
		return x.Validation
	}
	return nil
}

func (x *ScanTask) GetRuleContext() *RuleContext {
	if x != nil {
		return x.RuleContext
	}
	return nil
}

func (x *ScanTask) GetConfig() *TaskConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type Target struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Method        string                 `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Protocol      string                 `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Target) Reset() {
	*x = Target{}
	mi := &file_scanner_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_scanner_proto_rawDescGZIP(), []int{1}
}

func (x *Target) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Target) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Target) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

type AuthContext struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Headers       map[string]string      `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthContext) Reset() {
	*x = AuthContext{}
	mi := &file_scanner_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthContext) ProtoMessage() {}

func (x *AuthContext) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthContext.ProtoReflect.Descriptor instead.
func (*AuthContext) Descriptor() ([]byte, []int) {
	return file_scanner_proto_rawDescGZIP(), []int{2}
}

func (x *AuthContext) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AuthContext) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AuthContext) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *AuthContext) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

type Payload struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Headers         map[string]string      `protobuf:"bytes,1,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Body            string                 `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	QueryParams     map[string]string      `protobuf:"bytes,3,rep,name=query_params,json=queryParams,proto3" json:"query_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	InsertionPoints []*InsertionPoint      `protobuf:"bytes,4,rep,name=insertion_points,json=insertionPoints,proto3" json:"insertion_points,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Payload) Reset() {
	*x = Payload{}
	mi := &file_scanner_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload) ProtoMessage() {}

func (x *Payload) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload.ProtoReflect.Descriptor instead.
func (*Payload) Descriptor() ([]byte, []int) {
	return file_scanner_proto_rawDescGZIP(), []int{3}
}

func (x *Payload) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *Payload) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Payload) GetQueryParams() map[string]string {
	if x != nil {
		return x.QueryParams
	}
	return nil
}

func (x *Payload) GetInsertionPoints() []*InsertionPoint {
	if x != nil {
		return x.InsertionPoints
	}
	return nil
}

type InsertionPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Location      string                 `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Payloads      []string               `protobuf:"bytes,3,rep,name=payloads,proto3" json:"payloads,omitempty"`
	Encoding      string                 `protobuf:"bytes,4,opt,name=encoding,proto3" json:"encoding,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertionPoint) Reset() {
	*x = InsertionPoint{}
	mi := &file_scanner_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertionPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertionPoint) ProtoMessage() {}

func (x *InsertionPoint) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertionPoint.ProtoReflect.Descriptor instead.
func (*InsertionPoint) Descriptor() ([]byte, []int) {
	return file_scanner_proto_rawDescGZIP(), []int{4}
}

func (x *InsertionPoint) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *InsertionPoint) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *InsertionPoint) GetPayloads() []string {
	if x != nil {
		return x.Payloads
	}
	return nil
}

func (x *InsertionPoint) GetEncoding() string {
	if x != nil {
		return x.Encoding
	}
	return ""
}

type RuleContext struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Severity         string                 `protobuf:"bytes,2,opt,name=severity,proto3" json:"severity,omitempty"`
	Category         string                 `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	RequiredEvidence []string               `protobuf:"bytes,4,rep,name=required_evidence,json=requiredEvidence,proto3" json:"required_evidence,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RuleContext) Reset() {
	*x = RuleContext{}
	mi := &file_scanner_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuleContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleContext) ProtoMessage() {}

func (x *RuleContext) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleContext.ProtoReflect.Descriptor instead.
func (*RuleContext) Descriptor() ([]byte, []int) {
	return file_scanner_proto_rawDescGZIP(), []int{5}
}

func (x *RuleContext) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RuleContext) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *RuleContext) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *RuleContext) GetRequiredEvidence() []string {
	if x != nil {
		return x.RequiredEvidence
	}
	return nil
}

type TaskConfig struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Timeout         int32                  `protobuf:"varint,1,opt,name=timeout,proto3" json:"timeout,omitempty"`
	MaxRetries      int32                  `protobuf:"varint,2,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`
	FollowRedirects bool                   `protobuf:"varint,3,opt,name=follow_redirects,json=followRedirects,proto3" json:"follow_redirects,omitempty"`
	Headers         map[string]string      `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Proxy           *ProxyConfig           `protobuf:"bytes,5,opt,name=proxy,proto3" json:"proxy,omitempty"`
	Retry           *RetryConfig           `protobuf:"bytes,6,opt,name=retry,proto3" json:"retry,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TaskConfig) Reset() {
	*x = TaskConfig{}
	mi := &file_scanner_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskConfig) ProtoMessage() {}

func (x *TaskConfig) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskConfig.ProtoReflect.Descriptor instead.
func (*TaskConfig) Descriptor() ([]byte, []int) {
	return file_scanner_proto_rawDescGZIP(), []int{6}
}

func (x *TaskConfig) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *TaskConfig) GetMaxRetries() int32 {
	if x != nil {
		return x.MaxRetries
	}
	return 0
}

func (x *TaskConfig) GetFollowRedirects() bool {
	if x != nil {
		return x.FollowRedirects
	}
	return false
}

func (x *TaskConfig) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TaskConfig) GetProxy() *ProxyConfig {
	if x != nil {
		return x.Proxy
	}
	return nil
}

func (x *TaskConfig) GetRetry() *RetryConfig {
	if x != nil {
		return x.Retry
	}
	return nil
}

type ProxyConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Enabled       bool                   `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProxyConfig) Reset() {
	*x = ProxyConfig{}
	mi := &file_scanner_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProxyConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyConfig) ProtoMessage() {}

func (x *ProxyConfig) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyConfig.ProtoReflect.Descriptor instead.
func (*ProxyConfig) Descriptor() ([]byte, []int) {
	return file_scanner_proto_rawDescGZIP(), []int{7}
}

func (x *ProxyConfig) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ProxyConfig) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ProxyConfig) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ProxyConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type RetryConfig struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	MaxAttempts      int32                  `protobuf:"varint,1,opt,name=max_attempts,json=maxAttempts,proto3" json:"max_attempts,omitempty"`
	InitialDelay     int32                  `protobuf:"varint,2,opt,name=initial_delay,json=initialDelay,proto3" json:"initial_delay,omitempty"`
	MaxDelay         int32                  `protobuf:"varint,3,opt,name=max_delay,json=maxDelay,proto3" json:"max_delay,omitempty"`
	RetryStatusCodes []int32                `protobuf:"varint,4,rep,packed,name=retry_status_codes,json=retryStatusCodes,proto3" json:"retry_status_codes,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RetryConfig) Reset() {
	*x = RetryConfig{}
	mi := &file_scanner_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetryConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryConfig) ProtoMessage() {}

func (x *RetryConfig) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryConfig.ProtoReflect.Descriptor instead.
func (*RetryConfig) Descriptor() ([]byte, []int) {
	return file_scanner_proto_rawDescGZIP(), []int{8}
}

func (x *RetryConfig) GetMaxAttempts() int32 {
	if x != nil {
		return x.MaxAttempts
	}
	return 0
}

func (x *RetryConfig) GetInitialDelay() int32 {
	if x != nil {
		return x.InitialDelay
	}
	return 0
}

func (x *RetryConfig) GetMaxDelay() int32 {
	if x != nil {
		return x.MaxDelay
	}
	return 0
}

func (x *RetryConfig) GetRetryStatusCodes() []int32 {
	if x != nil {
		return x.RetryStatusCodes
	}
	return nil
}

type Validation struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	SuccessConditions  *SuccessConditions     `protobuf:"bytes,1,opt,name=success_conditions,json=successConditions,proto3" json:"success_conditions,omitempty"`
	EvidenceCollection *EvidenceCollection    `protobuf:"bytes,2,opt,name=evidence_collection,json=evidenceCollection,proto3" json:"evidence_collection,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Validation) Reset() {
	*x = Validation{}
	mi := &file_scanner_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Validation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Validation) ProtoMessage() {}

func (x *Validation) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Validation.ProtoReflect.Descriptor instead.
func (*Validation) Descriptor() ([]byte, []int) {
	return file_scanner_proto_rawDescGZIP(), []int{9}
}

func (x *Validation) GetSuccessConditions() *SuccessConditions {
	if x != nil {
		return x.SuccessConditions
	}
	return nil
}

func (x *Validation) GetEvidenceCollection() *EvidenceCollection {
	if x != nil {
		return x.EvidenceCollection
	}
	return nil
}

type SuccessConditions struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	StatusCodes      []int32                `protobuf:"varint,1,rep,packed,name=status_codes,json=statusCodes,proto3" json:"status_codes,omitempty"`
	ResponsePatterns []string               `protobuf:"bytes,2,rep,name=response_patterns,json=responsePatterns,proto3" json:"response_patterns,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SuccessConditions) Reset() {
	*x = SuccessConditions{}
	mi := &file_scanner_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuccessConditions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessConditions) ProtoMessage() {}

func (x *SuccessConditions) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessConditions.ProtoReflect.Descriptor instead.
func (*SuccessConditions) Descriptor() ([]byte, []int) {
	return file_scanner_proto_rawDescGZIP(), []int{10}
}

func (x *SuccessConditions) GetStatusCodes() []int32 {
	if x != nil {
		return x.StatusCodes
	}
	return nil
}

func (x *SuccessConditions) GetResponsePatterns() []string {
	if x != nil {
		return x.ResponsePatterns
	}
	return nil
}

type EvidenceCollection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SaveRequest   bool                   `protobuf:"varint,1,opt,name=save_request,json=saveRequest,proto3" json:"save_request,omitempty"`
	SaveResponse  bool                   `protobuf:"varint,2,opt,name=save_response,json=saveResponse,proto3" json:"save_response,omitempty"`
	Screenshot    bool                   `protobuf:"varint,3,opt,name=screenshot,proto3" json:"screenshot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EvidenceCollection) Reset() {
	*x = EvidenceCollection{}
	mi := &file_scanner_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EvidenceCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvidenceCollection) ProtoMessage() {}

func (x *EvidenceCollection) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvidenceCollection.ProtoReflect.Descriptor instead.
func (*EvidenceCollection) Descriptor() ([]byte, []int) {
	return file_scanner_proto_rawDescGZIP(), []int{11}
}

func (x *EvidenceCollection) GetSaveRequest() bool {
	if x != nil {
		return x.SaveRequest
	}
	return false
}

func (x *EvidenceCollection) GetSaveResponse() bool {
	if x != nil {
		return x.SaveResponse
	}
	return false
}

func (x *EvidenceCollection) GetScreenshot() bool {
	if x != nil {
		return x.Screenshot
	}
	return false
}

type ScanResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Findings      []*Finding             `protobuf:"bytes,3,rep,name=findings,proto3" json:"findings,omitempty"`
	Evidence      *Evidence              `protobuf:"bytes,4,opt,name=evidence,proto3" json:"evidence,omitempty"`
	Timestamp     int64                  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanResult) Reset() {
	*x = ScanResult{}
	mi := &file_scanner_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanResult) ProtoMessage() {}

func (x *ScanResult) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanResult.ProtoReflect.Descriptor instead.
func (*ScanResult) Descriptor() ([]byte, []int) {
	return file_scanner_proto_rawDescGZIP(), []int{12}
}

func (x *ScanResult) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ScanResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ScanResult) GetFindings() []*Finding {
	if x != nil {
		return x.Findings
	}
	return nil
}

func (x *ScanResult) GetEvidence() *Evidence {
	if x != nil {
		return x.Evidence
	}
	return nil
}

func (x *ScanResult) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ScanResult) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type Finding struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RuleId        string                 `protobuf:"bytes,2,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	Severity      string                 `protobuf:"bytes,3,opt,name=severity,proto3" json:"severity,omitempty"`
	Title         string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Details       string                 `protobuf:"bytes,5,opt,name=details,proto3" json:"details,omitempty"`
	Evidence      []*Evidence            `protobuf:"bytes,6,rep,name=evidence,proto3" json:"evidence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Finding) Reset() {
	*x = Finding{}
	mi := &file_scanner_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Finding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Finding) ProtoMessage() {}

func (x *Finding) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Finding.ProtoReflect.Descriptor instead.
func (*Finding) Descriptor() ([]byte, []int) {
	return file_scanner_proto_rawDescGZIP(), []int{13}
}

func (x *Finding) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Finding) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

func (x *Finding) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *Finding) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Finding) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *Finding) GetEvidence() []*Evidence {
	if x != nil {
		return x.Evidence
	}
	return nil
}

type Evidence struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Request       *HttpRequest           `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	Response      *HttpResponse          `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	Data          map[string]string      `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Validated     bool                   `protobuf:"varint,5,opt,name=validated,proto3" json:"validated,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Evidence) Reset() {
	*x = Evidence{}
	mi := &file_scanner_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Evidence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Evidence) ProtoMessage() {}

func (x *Evidence) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Evidence.ProtoReflect.Descriptor instead.
func (*Evidence) Descriptor() ([]byte, []int) {
	return file_scanner_proto_rawDescGZIP(), []int{14}
}

func (x *Evidence) GetRequest() *HttpRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *Evidence) GetResponse() *HttpResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *Evidence) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Evidence) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Evidence) GetValidated() bool {
	if x != nil {
		return x.Validated
	}
	return false
}

type HttpRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Method        string                 `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Headers       map[string]string      `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Body          string                 `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpRequest) Reset() {
	*x = HttpRequest{}
	mi := &file_scanner_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpRequest) ProtoMessage() {}

func (x *HttpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpRequest.ProtoReflect.Descriptor instead.
func (*HttpRequest) Descriptor() ([]byte, []int) {
	return file_scanner_proto_rawDescGZIP(), []int{15}
}

func (x *HttpRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *HttpRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *HttpRequest) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HttpRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type HttpResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StatusCode    int32                  `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Headers       map[string]string      `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Body          string                 `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	ResponseTime  int64                  `protobuf:"varint,4,opt,name=response_time,json=responseTime,proto3" json:"response_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpResponse) Reset() {
	*x = HttpResponse{}
	mi := &file_scanner_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpResponse) ProtoMessage() {}

func (x *HttpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpResponse.ProtoReflect.Descriptor instead.
func (*HttpResponse) Descriptor() ([]byte, []int) {
	return file_scanner_proto_rawDescGZIP(), []int{16}
}

func (x *HttpResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *HttpResponse) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HttpResponse) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *HttpResponse) GetResponseTime() int64 {
	if x != nil {
		return x.ResponseTime
	}
	return 0
}

type StreamAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamAck) Reset() {
	*x = StreamAck{}
	mi := &file_scanner_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamAck) ProtoMessage() {}

func (x *StreamAck) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamAck.ProtoReflect.Descriptor instead.
func (*StreamAck) Descriptor() ([]byte, []int) {
	return file_scanner_proto_rawDescGZIP(), []int{17}
}

func (x *StreamAck) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StreamAck) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type TaskStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskStatusRequest) Reset() {
	*x = TaskStatusRequest{}
	mi := &file_scanner_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskStatusRequest) ProtoMessage() {}

func (x *TaskStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskStatusRequest.ProtoReflect.Descriptor instead.
func (*TaskStatusRequest) Descriptor() ([]byte, []int) {
	return file_scanner_proto_rawDescGZIP(), []int{18}
}

func (x *TaskStatusRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type TaskStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Progress      float32                `protobuf:"fixed32,5,opt,name=progress,proto3" json:"progress,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskStatus) Reset() {
	*x = TaskStatus{}
	mi := &file_scanner_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskStatus) ProtoMessage() {}

func (x *TaskStatus) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskStatus.ProtoReflect.Descriptor instead.
func (*TaskStatus) Descriptor() ([]byte, []int) {
	return file_scanner_proto_rawDescGZIP(), []int{19}
}

func (x *TaskStatus) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TaskStatus) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TaskStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TaskStatus) GetProgress() float32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

type HeartbeatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Metrics       map[string]string      `protobuf:"bytes,2,rep,name=metrics,proto3" json:"metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_scanner_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_scanner_proto_rawDescGZIP(), []int{20}
}

func (x *HeartbeatRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *HeartbeatRequest) GetMetrics() map[string]string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type HeartbeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Alive         bool                   `protobuf:"varint,1,opt,name=alive,proto3" json:"alive,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_scanner_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_scanner_proto_rawDescGZIP(), []int{21}
}

func (x *HeartbeatResponse) GetAlive() bool {
	if x != nil {
		return x.Alive
	}
	return false
}

func (x *HeartbeatResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	mi := &file_scanner_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_scanner_proto_rawDescGZIP(), []int{22}
}

func (x *StatusRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type ScanStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	Progress      float32                `protobuf:"fixed32,4,opt,name=progress,proto3" json:"progress,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanStatus) Reset() {
	*x = ScanStatus{}
	mi := &file_scanner_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanStatus) ProtoMessage() {}

func (x *ScanStatus) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanStatus.ProtoReflect.Descriptor instead.
func (*ScanStatus) Descriptor() ([]byte, []int) {
	return file_scanner_proto_rawDescGZIP(), []int{23}
}

func (x *ScanStatus) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ScanStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ScanStatus) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ScanStatus) GetProgress() float32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

var File_scanner_proto protoreflect.FileDescriptor

const file_scanner_proto_rawDesc = "" +
	"\n" +
	"\rscanner.proto\x12\x10byakugan.scanner\"\xf9\x02\n" +
	"\bScanTask\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x120\n" +
	"\x06target\x18\x02 \x01(\v2\x18.byakugan.scanner.TargetR\x06target\x12@\n" +
	"\fauth_context\x18\x03 \x01(\v2\x1d.byakugan.scanner.AuthContextR\vauthContext\x123\n" +
	"\apayload\x18\x04 \x01(\v2\x19.byakugan.scanner.PayloadR\apayload\x12<\n" +
	"\n" +
	"validation\x18\x05 \x01(\v2\x1c.byakugan.scanner.ValidationR\n" +
	"validation\x12@\n" +
	"\frule_context\x18\x06 \x01(\v2\x1d.byakugan.scanner.RuleContextR\vruleContext\x124\n" +
	"\x06config\x18\a \x01(\v2\x1c.byakugan.scanner.TaskConfigR\x06config\"N\n" +
	"\x06Target\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x16\n" +
	"\x06method\x18\x02 \x01(\tR\x06method\x12\x1a\n" +
	"\bprotocol\x18\x03 \x01(\tR\bprotocol\"\xd8\x01\n" +
	"\vAuthContext\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x03 \x01(\x03R\texpiresAt\x12D\n" +
	"\aheaders\x18\x04 \x03(\v2*.byakugan.scanner.AuthContext.HeadersEntryR\aheaders\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf7\x02\n" +
	"\aPayload\x12@\n" +
	"\aheaders\x18\x01 \x03(\v2&.byakugan.scanner.Payload.HeadersEntryR\aheaders\x12\x12\n" +
	"\x04body\x18\x02 \x01(\tR\x04body\x12M\n" +
	"\fquery_params\x18\x03 \x03(\v2*.byakugan.scanner.Payload.QueryParamsEntryR\vqueryParams\x12K\n" +
	"\x10insertion_points\x18\x04 \x03(\v2 .byakugan.scanner.InsertionPointR\x0finsertionPoints\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a>\n" +
	"\x10QueryParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"x\n" +
	"\x0eInsertionPoint\x12\x1a\n" +
	"\blocation\x18\x01 \x01(\tR\blocation\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x1a\n" +
	"\bpayloads\x18\x03 \x03(\tR\bpayloads\x12\x1a\n" +
	"\bencoding\x18\x04 \x01(\tR\bencoding\"\x82\x01\n" +
	"\vRuleContext\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\bseverity\x18\x02 \x01(\tR\bseverity\x12\x1a\n" +
	"\bcategory\x18\x03 \x01(\tR\bcategory\x12+\n" +
	"\x11required_evidence\x18\x04 \x03(\tR\x10requiredEvidence\"\xdd\x02\n" +
	"\n" +
	"TaskConfig\x12\x18\n" +
	"\atimeout\x18\x01 \x01(\x05R\atimeout\x12\x1f\n" +
	"\vmax_retries\x18\x02 \x01(\x05R\n" +
	"maxRetries\x12)\n" +
	"\x10follow_redirects\x18\x03 \x01(\bR\x0ffollowRedirects\x12C\n" +
	"\aheaders\x18\x04 \x03(\v2).byakugan.scanner.TaskConfig.HeadersEntryR\aheaders\x123\n" +
	"\x05proxy\x18\x05 \x01(\v2\x1d.byakugan.scanner.ProxyConfigR\x05proxy\x123\n" +
	"\x05retry\x18\x06 \x01(\v2\x1d.byakugan.scanner.RetryConfigR\x05retry\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"q\n" +
	"\vProxyConfig\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12\x18\n" +
	"\aenabled\x18\x04 \x01(\bR\aenabled\"\xa0\x01\n" +
	"\vRetryConfig\x12!\n" +
	"\fmax_attempts\x18\x01 \x01(\x05R\vmaxAttempts\x12#\n" +
	"\rinitial_delay\x18\x02 \x01(\x05R\finitialDelay\x12\x1b\n" +
	"\tmax_delay\x18\x03 \x01(\x05R\bmaxDelay\x12,\n" +
	"\x12retry_status_codes\x18\x04 \x03(\x05R\x10retryStatusCodes\"\xb7\x01\n" +
	"\n" +
	"Validation\x12R\n" +
	"\x12success_conditions\x18\x01 \x01(\v2#.byakugan.scanner.SuccessConditionsR\x11successConditions\x12U\n" +
	"\x13evidence_collection\x18\x02 \x01(\v2$.byakugan.scanner.EvidenceCollectionR\x12evidenceCollection\"c\n" +
	"\x11SuccessConditions\x12!\n" +
	"\fstatus_codes\x18\x01 \x03(\x05R\vstatusCodes\x12+\n" +
	"\x11response_patterns\x18\x02 \x03(\tR\x10responsePatterns\"|\n" +
	"\x12EvidenceCollection\x12!\n" +
	"\fsave_request\x18\x01 \x01(\bR\vsaveRequest\x12#\n" +
	"\rsave_response\x18\x02 \x01(\bR\fsaveResponse\x12\x1e\n" +
	"\n" +
	"screenshot\x18\x03 \x01(\bR\n" +
	"screenshot\"\xd1\x02\n" +
	"\n" +
	"ScanResult\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x125\n" +
	"\bfindings\x18\x03 \x03(\v2\x19.byakugan.scanner.FindingR\bfindings\x126\n" +
	"\bevidence\x18\x04 \x01(\v2\x1a.byakugan.scanner.EvidenceR\bevidence\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\x03R\ttimestamp\x12F\n" +
	"\bmetadata\x18\x06 \x03(\v2*.byakugan.scanner.ScanResult.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb6\x01\n" +
	"\aFinding\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\arule_id\x18\x02 \x01(\tR\x06ruleId\x12\x1a\n" +
	"\bseverity\x18\x03 \x01(\tR\bseverity\x12\x14\n" +
	"\x05title\x18\x04 \x01(\tR\x05title\x12\x18\n" +
	"\adetails\x18\x05 \x01(\tR\adetails\x126\n" +
	"\bevidence\x18\x06 \x03(\v2\x1a.byakugan.scanner.EvidenceR\bevidence\"\xae\x02\n" +
	"\bEvidence\x127\n" +
	"\arequest\x18\x01 \x01(\v2\x1d.byakugan.scanner.HttpRequestR\arequest\x12:\n" +
	"\bresponse\x18\x02 \x01(\v2\x1e.byakugan.scanner.HttpResponseR\bresponse\x128\n" +
	"\x04data\x18\x03 \x03(\v2$.byakugan.scanner.Evidence.DataEntryR\x04data\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\x12\x1c\n" +
	"\tvalidated\x18\x05 \x01(\bR\tvalidated\x1a7\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xcd\x01\n" +
	"\vHttpRequest\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x16\n" +
	"\x06method\x18\x02 \x01(\tR\x06method\x12D\n" +
	"\aheaders\x18\x03 \x03(\v2*.byakugan.scanner.HttpRequest.HeadersEntryR\aheaders\x12\x12\n" +
	"\x04body\x18\x04 \x01(\tR\x04body\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xeb\x01\n" +
	"\fHttpResponse\x12\x1f\n" +
	"\vstatus_code\x18\x01 \x01(\x05R\n" +
	"statusCode\x12E\n" +
	"\aheaders\x18\x02 \x03(\v2+.byakugan.scanner.HttpResponse.HeadersEntryR\aheaders\x12\x12\n" +
	"\x04body\x18\x03 \x01(\tR\x04body\x12#\n" +
	"\rresponse_time\x18\x04 \x01(\x03R\fresponseTime\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"?\n" +
	"\tStreamAck\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\",\n" +
	"\x11TaskStatusRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\"\x8d\x01\n" +
	"\n" +
	"TaskStatus\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12\x1a\n" +
	"\bprogress\x18\x05 \x01(\x02R\bprogress\"\xb2\x01\n" +
	"\x10HeartbeatRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12I\n" +
	"\ametrics\x18\x02 \x03(\v2/.byakugan.scanner.HeartbeatRequest.MetricsEntryR\ametrics\x1a:\n" +
	"\fMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"C\n" +
	"\x11HeartbeatResponse\x12\x14\n" +
	"\x05alive\x18\x01 \x01(\bR\x05alive\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"(\n" +
	"\rStatusRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\"o\n" +
	"\n" +
	"ScanStatus\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\x12\x1a\n" +
	"\bprogress\x18\x04 \x01(\x02R\bprogress2\xad\x03\n" +
	"\x0eScannerService\x12I\n" +
	"\vExecuteScan\x12\x1a.byakugan.scanner.ScanTask\x1a\x1c.byakugan.scanner.ScanResult\"\x00\x12P\n" +
	"\rStreamResults\x12\x1c.byakugan.scanner.ScanResult\x1a\x1b.byakugan.scanner.StreamAck\"\x00(\x010\x01\x12T\n" +
	"\rGetTaskStatus\x12#.byakugan.scanner.TaskStatusRequest\x1a\x1c.byakugan.scanner.TaskStatus\"\x00\x12P\n" +
	"\rGetScanStatus\x12\x1f.byakugan.scanner.StatusRequest\x1a\x1c.byakugan.scanner.ScanStatus\"\x00\x12V\n" +
	"\tHeartbeat\x12\".byakugan.scanner.HeartbeatRequest\x1a#.byakugan.scanner.HeartbeatResponse\"\x00B\x03Z\x01.b\x06proto3"

var (
	file_scanner_proto_rawDescOnce sync.Once
	file_scanner_proto_rawDescData []byte
)

func file_scanner_proto_rawDescGZIP() []byte {
	file_scanner_proto_rawDescOnce.Do(func() {
		file_scanner_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_scanner_proto_rawDesc), len(file_scanner_proto_rawDesc)))
	})
	return file_scanner_proto_rawDescData
}

var file_scanner_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_scanner_proto_goTypes = []any{
	(*ScanTask)(nil),           // 0: byakugan.scanner.ScanTask
	(*Target)(nil),             // 1: byakugan.scanner.Target
	(*AuthContext)(nil),        // 2: byakugan.scanner.AuthContext
	(*Payload)(nil),            // 3: byakugan.scanner.Payload
	(*InsertionPoint)(nil),     // 4: byakugan.scanner.InsertionPoint
	(*RuleContext)(nil),        // 5: byakugan.scanner.RuleContext
	(*TaskConfig)(nil),         // 6: byakugan.scanner.TaskConfig
	(*ProxyConfig)(nil),        // 7: byakugan.scanner.ProxyConfig
	(*RetryConfig)(nil),        // 8: byakugan.scanner.RetryConfig
	(*Validation)(nil),         // 9: byakugan.scanner.Validation
	(*SuccessConditions)(nil),  // 10: byakugan.scanner.SuccessConditions
	(*EvidenceCollection)(nil), // 11: byakugan.scanner.EvidenceCollection
	(*ScanResult)(nil),         // 12: byakugan.scanner.ScanResult
	(*Finding)(nil),            // 13: byakugan.scanner.Finding
	(*Evidence)(nil),           // 14: byakugan.scanner.Evidence
	(*HttpRequest)(nil),        // 15: byakugan.scanner.HttpRequest
	(*HttpResponse)(nil),       // 16: byakugan.scanner.HttpResponse
	(*StreamAck)(nil),          // 17: byakugan.scanner.StreamAck
	(*TaskStatusRequest)(nil),  // 18: byakugan.scanner.TaskStatusRequest
	(*TaskStatus)(nil),         // 19: byakugan.scanner.TaskStatus
	(*HeartbeatRequest)(nil),   // 20: byakugan.scanner.HeartbeatRequest
	(*HeartbeatResponse)(nil),  // 21: byakugan.scanner.HeartbeatResponse
	(*StatusRequest)(nil),      // 22: byakugan.scanner.StatusRequest
	(*ScanStatus)(nil),         // 23: byakugan.scanner.ScanStatus
	nil,                        // 24: byakugan.scanner.AuthContext.HeadersEntry
	nil,                        // 25: byakugan.scanner.Payload.HeadersEntry
	nil,                        // 26: byakugan.scanner.Payload.QueryParamsEntry
	nil,                        // 27: byakugan.scanner.TaskConfig.HeadersEntry
	nil,                        // 28: byakugan.scanner.ScanResult.MetadataEntry
	nil,                        // 29: byakugan.scanner.Evidence.DataEntry
	nil,                        // 30: byakugan.scanner.HttpRequest.HeadersEntry
	nil,                        // 31: byakugan.scanner.HttpResponse.HeadersEntry
	nil,                        // 32: byakugan.scanner.HeartbeatRequest.MetricsEntry
}
var file_scanner_proto_depIdxs = []int32{
	1,  // 0: byakugan.scanner.ScanTask.target:type_name -> byakugan.scanner.Target
	2,  // 1: byakugan.scanner.ScanTask.auth_context:type_name -> byakugan.scanner.AuthContext
	3,  // 2: byakugan.scanner.ScanTask.payload:type_name -> byakugan.scanner.Payload
	9,  // 3: byakugan.scanner.ScanTask.validation:type_name -> byakugan.scanner.Validation
	5,  // 4: byakugan.scanner.ScanTask.rule_context:type_name -> byakugan.scanner.RuleContext
	6,  // 5: byakugan.scanner.ScanTask.config:type_name -> byakugan.scanner.TaskConfig
	24, // 6: byakugan.scanner.AuthContext.headers:type_name -> byakugan.scanner.AuthContext.HeadersEntry
	25, // 7: byakugan.scanner.Payload.headers:type_name -> byakugan.scanner.Payload.HeadersEntry
	26, // 8: byakugan.scanner.Payload.query_params:type_name -> byakugan.scanner.Payload.QueryParamsEntry
	4,  // 9: byakugan.scanner.Payload.insertion_points:type_name -> byakugan.scanner.InsertionPoint
	27, // 10: byakugan.scanner.TaskConfig.headers:type_name -> byakugan.scanner.TaskConfig.HeadersEntry
	7,  // 11: byakugan.scanner.TaskConfig.proxy:type_name -> byakugan.scanner.ProxyConfig
	8,  // 12: byakugan.scanner.TaskConfig.retry:type_name -> byakugan.scanner.RetryConfig
	10, // 13: byakugan.scanner.Validation.success_conditions:type_name -> byakugan.scanner.SuccessConditions
	11, // 14: byakugan.scanner.Validation.evidence_collection:type_name -> byakugan.scanner.EvidenceCollection
	13, // 15: byakugan.scanner.ScanResult.findings:type_name -> byakugan.scanner.Finding
	14, // 16: byakugan.scanner.ScanResult.evidence:type_name -> byakugan.scanner.Evidence
	28, // 17: byakugan.scanner.ScanResult.metadata:type_name -> byakugan.scanner.ScanResult.MetadataEntry
	14, // 18: byakugan.scanner.Finding.evidence:type_name -> byakugan.scanner.Evidence
	15, // 19: byakugan.scanner.Evidence.request:type_name -> byakugan.scanner.HttpRequest
	16, // 20: byakugan.scanner.Evidence.response:type_name -> byakugan.scanner.HttpResponse
	29, // 21: byakugan.scanner.Evidence.data:type_name -> byakugan.scanner.Evidence.DataEntry
	30, // 22: byakugan.scanner.HttpRequest.headers:type_name -> byakugan.scanner.HttpRequest.HeadersEntry
	31, // 23: byakugan.scanner.HttpResponse.headers:type_name -> byakugan.scanner.HttpResponse.HeadersEntry
	32, // 24: byakugan.scanner.HeartbeatRequest.metrics:type_name -> byakugan.scanner.HeartbeatRequest.MetricsEntry
	0,  // 25: byakugan.scanner.ScannerService.ExecuteScan:input_type -> byakugan.scanner.ScanTask
	12, // 26: byakugan.scanner.ScannerService.StreamResults:input_type -> byakugan.scanner.ScanResult
	18, // 27: byakugan.scanner.ScannerService.GetTaskStatus:input_type -> byakugan.scanner.TaskStatusRequest
	22, // 28: byakugan.scanner.ScannerService.GetScanStatus:input_type -> byakugan.scanner.StatusRequest
	20, // 29: byakugan.scanner.ScannerService.Heartbeat:input_type -> byakugan.scanner.HeartbeatRequest
	12, // 30: byakugan.scanner.ScannerService.ExecuteScan:output_type -> byakugan.scanner.ScanResult
	17, // 31: byakugan.scanner.ScannerService.StreamResults:output_type -> byakugan.scanner.StreamAck
	19, // 32: byakugan.scanner.ScannerService.GetTaskStatus:output_type -> byakugan.scanner.TaskStatus
	23, // 33: byakugan.scanner.ScannerService.GetScanStatus:output_type -> byakugan.scanner.ScanStatus
	21, // 34: byakugan.scanner.ScannerService.Heartbeat:output_type -> byakugan.scanner.HeartbeatResponse
	30, // [30:35] is the sub-list for method output_type
	25, // [25:30] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_scanner_proto_init() }
func file_scanner_proto_init() {
	if File_scanner_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_scanner_proto_rawDesc), len(file_scanner_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_scanner_proto_goTypes,
		DependencyIndexes: file_scanner_proto_depIdxs,
		MessageInfos:      file_scanner_proto_msgTypes,
	}.Build()
	File_scanner_proto = out.File
	file_scanner_proto_goTypes = nil
	file_scanner_proto_depIdxs = nil
}
